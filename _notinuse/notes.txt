gpio_alt -p 18 -f 5
gpio_alt -p 13 -f 0



gpio readall


alsamixer

\








sudo nano /boot/config.txt
pi@alice:~/CityGames $ dmesg | grep tty

[    0.000000] Kernel command line: 8250.nr_uarts=1 dma.dmachans=0x7f35 bcm2708_fb.fbwidth=656 bcm2708_fb.fbheight=416 bcm2709.boardrev=0xa02082 bcm2709.serial=0x55afa648 smsc95xx.macaddr=B8:27:EB:AF:A6:48 bcm2708_fb.fbswap=1 bcm2709.uart_clock=48000000 vc_mem.mem_base=0x3dc00000 vc_mem.mem_size=0x3f000000  dwc_otg.lpm_enable=0 console=tty1 root=/dev/mmcblk0p2 rootfstype=ext4 elevator=deadline fsck.repair=yes rootwait
[    0.001333] console [tty1] enabled
[    0.273813] 3f215040.uart: ttyS0 at MMIO 0x3f215040 (irq = 59, base_baud = 31250000) is a 16550
[    1.898794] 3f201000.uart: ttyAMA0 at MMIO 0x3f201000 (irq = 87, base_baud = 0) is a PL011 rev2



sudo nano /boot/cmdline.txt
sudo systemctl stop serial-getty@ttyAMA0.service
sudo systemctl disable serial-getty@ttyAMA0.service 

check
sudo gpsd /dev/ttyAMA0 -F /var/run/gpsd.sock

cgps -s














#define PMTK_SET_NMEA_OUTPUT_RMCGGA "$PMTK314,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0*28"

// different commands to set the update rate from once a second (1 Hz) to 10 times a second (10Hz)
// Note that these only control the rate at which the position is echoed, to actually speed up the
// position fix you must also send one of the position fix rate commands below too.
#define PMTK_SET_NMEA_UPDATE_100_MILLIHERTZ  "$PMTK220,10000*2F" // Once every 10 seconds, 100 millihertz.
#define PMTK_SET_NMEA_UPDATE_200_MILLIHERTZ  "$PMTK220,5000*1B"  // Once every 5 seconds, 200 millihertz.
#define PMTK_SET_NMEA_UPDATE_1HZ  "$PMTK220,1000*1F"
#define PMTK_SET_NMEA_UPDATE_5HZ  "$PMTK220,200*2C"
#define PMTK_SET_NMEA_UPDATE_10HZ "$PMTK220,100*2F"
// Position fix update rate commands.
#define PMTK_API_SET_FIX_CTL_100_MILLIHERTZ  "$PMTK300,10000,0,0,0,0*2C" // Once every 10 seconds, 100 millihertz.
#define PMTK_API_SET_FIX_CTL_200_MILLIHERTZ  "$PMTK300,5000,0,0,0,0*18"  // Once every 5 seconds, 200 millihertz.
#define PMTK_API_SET_FIX_CTL_1HZ  "$PMTK300,1000,0,0,0,0*1C"
#define PMTK_API_SET_FIX_CTL_5HZ  "$PMTK300,200,0,0,0,0*2F"
// Can't fix position faster than 5 times a second!





network managers:
import sys
import os
os.system('sudo ifconfig wlan0 up')
os.system('sudo iwconfig wlan0 essid MY_ID key s:MY_PASS')
os.system('sudo dhclient wlan0')


wicd

network-manager (ubuntu)
nm-tool | grep "Freq.*Strength" | sed -ne "s|\(.*Strength \([0-9]\+\).*\)|\2}\1|p" | sort -n -r


iw-list scanning
sudo iwlist wlan0 scanning | egrep 'Cell |Encryption|Quality|Last beacon|ESSID'
sudo iwlist wlan0 scanning | egrep 'Cell|Quality|ESSID'
sudo iwlist wlan0 scanning | egrep 'Quality|ESSID'
sudo iwlist wlan0 scanning | egrep 'Address|Quality'

          Cell 01 - Address: 58:6D:8F:8E:E5:A0
                    Quality=55/70  Signal level=-55 dBm  
                    Encryption key:off
                    ESSID:"kapper.net-FREE-WLAN"
                    Extra: Last beacon: 40ms ago
          Cell 02 - Address: D8:50:E6:92:5A:38
                    Quality=55/70  Signal level=-55 dBm  
                    Encryption key:on
                    ESSID:"happylab"
                    Extra: Last beacon: 40ms ago
          Cell 03 - Address: 64:7C:34:11:1F:6F
                    Quality=43/70  Signal level=-67 dBm  
                    Encryption key:on
                    ESSID:"UPC9262201"
                    Extra: Last beacon: 40ms ago
          Cell 04 - Address: E8:94:F6:49:52:F0
                    Quality=19/70  Signal level=-91 dBm  
                    Encryption key:on
                    ESSID:"happylab-link"
                    Extra: Last beacon: 20260ms ago

58:6D:8F:8E:E5:A0, -55; D8:50:E6:92:5A:38, -55; 64:7C:34:11:1F:6F, -67; E8:94:F6:49:52:F0, -91 


58: 6D: 8F: 8E: E5: A0, -55; 




      

  """
    def get_quality(cell):
        quality = matching_line(cell,"Quality=").split()[0].split('/')
        return str(int(round(float(quality[0]) / float(quality[1]) * 100))).rjust(3) + " %"

    def get_channel(cell):
        return matching_line(cell,"Channel:")
  """



  """
  def get_encryption(cell):
      enc=""
      if matching_line(cell,"Encryption key:") == "off":
          enc="Open"
      else:
          for line in cell:
              matching = match(line,"IE:")
              if matching!=None:
                  wpa=match(matching,"WPA Version ")
                  if wpa!=None:
                      enc="WPA v."+wpa
          if enc=="":
              enc="WEP"
      return enc
"""
